# Options for analysis running.
run:
  # The default concurrency value is the number of available CPU.
  # concurrency: 4
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  # timeout: 5m
  # Exit code when at least one issue was found.
  # Default: 1
  # issues-exit-code: 2
  # Include test files or not.
  # Default: true
  # tests: false
  # List of build tags, all linters use it.
  # Default: [].
  # build-tags:
  #   - mytag
  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path.
  # Default value is empty list,
  # but default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # skip-dirs:
  #   - src/external_libs
  #   - autogenerated_by_my_lib
  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  # skip-dirs-use-default: false
  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  # Default value is empty list,
  # but there is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # skip-files:
  #   - ".*\\.my\\.go$"
  #   - lib/bad.go
  # If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # By default, it isn't set.
  modules-download-mode: readonly
  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: false
  # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.18
  # go: '1.19'

# output configuration options
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.json,colored-line-number"
  #
  # Default: colored-line-number
  # format: json
  # Print lines of code with issue.
  # Default: true
  # print-issued-lines: false
  # Print linter name in the end of issue text.
  # Default: true
  # print-linter-name: false
  # Make issues output unique by line.
  # Default: true
  # uniq-by-line: false
  # Add a prefix to the output file references.
  # Default is no prefix.
  # path-prefix: ""
  # Sort results by: filepath, line and column.
  # sort-results: falseformat: json
  # Print lines of code with issue.
  # Default: true
  # print-issued-lines: false
  # Print linter name in the end of issue text.
  # Default: true
  # print-linter-name: false
  # Make issues output unique by line.
  # Default: true
  # uniq-by-line: false
  # Add a prefix to the output file references.
  # Default is no prefix.
  # path-prefix: ""
  # Sort results by: filepath, line and column.
  # sort-results: false

linters:
  # Disable all linters.
  # Default: false
  disable-all: true
  # Enable specific linter
  # https://golangci-lint.run/usage/linters/#enabled-by-default
  enable:
    - asasalint
    #   - asciicheck
    #   - bidichk
    - bodyclose
    #   - containedctx
    #   - contextcheck
    #   - cyclop
    #   - deadcode
    #   - decorder
    #   - depguard
    #   - dogsled
    #   - dupl
    #   - dupword
    #   - durationcheck
    #   - errcheck
    #   - errchkjson
    - errname
    #   - errorlint
    #   - execinquery
    #   - exhaustive
    #   - exhaustivestruct
    - exhaustruct
    - exportloopref
    #   - forbidigo
    #   - forcetypeassert
    #   - funlen
    #   - gci
    - ginkgolinter
    #   - gochecknoglobals
    #   - gochecknoinits
    #   - gocognit
    #   - goconst
    - gocritic
    #   - gocyclo
    #   - godot
    #   - godox
    #   - goerr113
    #   - gofmt
    #   - gofumpt
    #   - goheader
    #   - goimports
    #   - golint
    #   - gomnd
    #   - gomoddirectives
    #   - gomodguard
    #   - goprintffuncname
    - gosec
    - gosimple
    - govet
    #   - grouper
    #   - ifshort
    #   - importas
    - ineffassign
    #   - interfacebloat
    #   - interfacer
    - ireturn
    #   - lll
    #   - loggercheck
    - maintidx
    #   - makezero
    #   - maligned
    - musttag
    #   - misspell
    #   - nakedret
    #   - nestif
    - nilerr
    #   - nilnil
    - nlreturn
    #   - noctx
    #   - nolintlint
    #   - nonamedreturns
    #   - nosnakecase
    - nosprintfhostport
    #   - paralleltest
    - prealloc
    - predeclared
    - perfsprint
    #   - promlinter
    - reassign
    - revive
    #   - rowserrcheck
    #   - scopelint
    #   - sqlclosecheck
    - staticcheck
    #   - structcheck
    #   - stylecheck
    #   - tagliatelle
    #   - tenv
    #   - testableexamples
    #   - testpackage
    #   - thelper
    #   - tparallel
    #   - typecheck
    #   - unconvert
    - unparam
    - unused
    - usestdlibvars
    #   - varcheck
    #   - varnamelen
    - wastedassign
  #   - whitespace
  #   - wrapcheck
  #   - wsl
  # Enable presets.
  # https://golangci-lint.run/usage/linters
  # presets:
  #   - bugs
  #   - comment
  #   - complexity
  #   - error
  #   - format
  #   - import
  #   - metalinter
  #   - module
  #   - performance
  #   - sql
  #   - style
  #   - test
  #   - unused
  # Run only fast linters from enabled linters set (first run won't be fast)
  # Default: false
  # fast: true

linters-settings:
  # asasalint:
  # To specify a set of function names to exclude.
  # The values are merged with the builtin exclusions.
  # The builtin exclusions can be disabled by setting `use-builtin-exclusions` to `false`.
  # Default: ["^(fmt|log|logger|t|)\.(Print|Fprint|Sprint|Fatal|Panic|Error|Warn|Warning|Info|Debug|Log)(|f|ln)$"]
  ## exclude:
  #  - Append
  #  - \.Wrapf
  # To enable/disable the asasalint builtin exclusions of function names.
  # See the default value of `exclude` to get the builtin exclusions.
  # Default: true
  ## use-builtin-exclusions: false
  # Ignore *_test.go files.
  # Default: false
  ## ignore-test: true
  ginkgolinter:
    # Suppress the wrong length assertion warning.
    # Default: false
    ## suppress-len-assertion: true
    # Suppress the wrong nil assertion warning.
    # Default: false
    ## suppress-nil-assertion: true
    # Suppress the wrong error assertion warning.
    # Default: false
    ## suppress-err-assertion: true
    # Suppress the wrong comparison assertion warning.
    # Default: false
    ## suppress-compare-assertion: true
    # Suppress the function all in async assertion warning.
    # Default: false
    ## suppress-async-assertion: true
    # Suppress warning for comparing values from different types, like int32 and uint32
    # Default: false
    ## suppress-type-compare-assertion: true
    # Trigger warning for ginkgo focus containers like FDescribe, FContext, FWhen or FIt
    # Default: false
    ## forbid-focus-container: true
    # Don't trigger warnings for HaveLen(0)
    # Default: false
    ## allow-havelen-zero: true
  gocritic:
    # Which checks should be enabled; can't be combined with 'disabled-checks'.
    # See https://go-critic.github.io/overview#checks-overview.
    # To check which checks are enabled run `GL_DEBUG=gocritic golangci-lint run`.
    # By default, list of stable checks is used.
    # enabled-checks:
    #   - nestingReduce
    #   - unnamedResult
    #   - ruleguard
    #   - truncateCmp
    # Which checks should be disabled; can't be combined with 'enabled-checks'.
    # Default: []
    disabled-checks:
      - assignOp
  gosimple:
    # Select the Go version to target.
    # Default: 1.13
    # Deprecated: use the global `run.go` instead.
    # go: "1.15"
    # Sxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    # checks: ["all"]
  gosec:
    # Filter out the issues with a lower severity than the given value.
    # Valid options are: low, medium, high.
    # Default: low
    severity: medium
  govet:
    # Settings per analyzer.
    settings:
      # Analyzer name, run `go tool vet help` to see all analyzers.
      shadow:
        # Whether to be strict about shadowing; can be noisy.
        # Default: false
        strict: true
    # Enable all analyzers.
    # Default: false
    enable-all: true
    # Disable analyzers by name.
    # Run `go tool vet help` to see all analyzers.
    # Default: []
    disable:
      #   - asmdecl
      #   - assign
      #   - atomic
      #   - atomicalign
      #   - bools
      #   - buildtag
      #   - cgocall
      #   - composites
      #   - copylocks
      #   - deepequalerrors
      #   - errorsas
      - fieldalignment
    #   - findcall
    #   - framepointer
    #   - httpresponse
    #   - ifaceassert
    #   - loopclosure
    #   - lostcancel
    #   - nilfunc
    #   - nilness
    #   - printf
    #   - reflectvaluecompare
    #   - shadow
    #   - shift
    #   - sigchanyzer
    #   - sortslice
    #   - stdmethods
    #   - stringintconv
    #   - structtag
    #   - testinggoroutine
    #   - tests
    #   - unmarshal
    #   - unreachable
    #   - unsafeptr
    #   - unusedresult
    #   - unusedwrite
  # ireturn:
  # ireturn does not allow using `allow` and `reject` settings at the same time.
  # Both settings are lists of the keywords and regular expressions matched to interface or package names.
  # keywords:
  # - `empty` for `interface{}`
  # - `error` for errors
  # - `stdlib` for standard library
  # - `anon` for anonymous interfaces
  # - `generic` for generic interfaces added in go 1.18
  # By default, it allows using errors, empty interfaces, anonymous interfaces,
  # and interfaces provided by the standard library.
  # allow:
  #  - anon
  #  - error
  #  - empty
  #  - stdlib
  #  # You can specify idiomatic endings for interface
  #  - (or|er)$
  # reject-list of interfaces
  # reject:
  #  - github.com\/user\/package\/v4\.Type
  maintidx:
    # Show functions with maintainability index lower than N.
    # A high index indicates better maintainability (it's kind of the opposite of complexity).
    # Default: 20
    # under: 100
  musttag:
    # A set of custom functions to check in addition to the builtin ones.
    # Default: json, xml, gopkg.in/yaml.v3, BurntSushi/toml, mitchellh/mapstructure, jmoiron/sqlx
    ## functions:
    # The full name of the function, including the package.
    ## - name: github.com/hashicorp/hcl/v2/hclsimple.DecodeFile
    # The struct tag whose presence should be ensured.
    ## tag: hcl
    # The position of the argument to check.
    ## arg-pos: 2
  nlreturn:
    # Size of the block (including return statement that is still "OK")
    # so no return split required.
    # Default: 1
    block-size: 0
  prealloc:
    # IMPORTANT: we don't recommend using this linter before doing performance profiling.
    # For most programs usage of prealloc will be a premature optimization.
    # Report pre-allocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.
    # Default: true
    # simple: false
    # Report pre-allocation suggestions on range loops.
    # Default: true
    # range-loops: false
    # Report pre-allocation suggestions on for loops.
    # Default: false
    for-loops: true
  revive:
    enable-all-rules: true
    ignore-generated-header: true
    rules:
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#add-constant
      - name: add-constant
        severity: warning
        disabled: false
        arguments:
          - maxLitCount: '3'
            allowStrs: '""'
            allowInts: '0,1'
            allowFloats: '0.0,1.0'
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#argument-limit
      - name: argument-limit
        severity: warning
        disabled: false
        arguments: [4]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#atomic
      - name: atomic
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#banned-characters
      - name: banned-characters
        severity: warning
        disabled: false
        arguments: ['Ω', 'Σ', 'σ', '7']
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#bare-return
      - name: bare-return
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#blank-imports
      - name: blank-imports
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#bool-literal-in-expr
      - name: bool-literal-in-expr
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#call-to-gc
      - name: call-to-gc
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cognitive-complexity
      - name: cognitive-complexity
        severity: warning
        disabled: false
        arguments: [10]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#comment-spacings
      # - name: comment-spacings
      # severityt: warning
      # disabled: false
      # arguments: []
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#confusing-naming
      - name: confusing-naming
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#confusing-results
      - name: confusing-results
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#constant-logical-expr
      - name: constant-logical-expr
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-as-argument
      - name: context-as-argument
        severity: warning
        disabled: false
        arguments:
          - allowTypesBefore: '*testing.T'
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-keys-type
      - name: context-keys-type
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cyclomatic
      - name: cyclomatic
        severity: warning
        disabled: false
        arguments: [3]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#datarace
      - name: datarace
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#deep-exit
      - name: deep-exit
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#defer
      - name: defer
        severity: warning
        disabled: false
        arguments:
          - []
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#dot-imports
      - name: dot-imports
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#duplicated-imports
      - name: duplicated-imports
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#early-return
      - name: early-return
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-block
      - name: empty-block
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-lines
      - name: empty-lines
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-naming
      - name: error-naming
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-return
      - name: error-return
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-strings
      - name: error-strings
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#errorf
      - name: errorf
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#exported
      - name: exported
        severity: warning
        disabled: false
        arguments:
          - 'checkPrivateReceivers'
          - 'sayRepetitiveInsteadOfStutters'
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#file-header
      - name: file-header
        severity: warning
        disabled: true
        arguments: ['']
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#flag-parameter
      - name: flag-parameter
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#function-result-limit
      - name: function-result-limit
        severity: warning
        disabled: false
        arguments: [3]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#function-length
      - name: function-length
        severity: warning
        disabled: false
        arguments: [15, 0]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#get-return
      - name: get-return
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#identical-branches
      - name: identical-branches
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#if-return
      - name: if-return
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#increment-decrement
      - name: increment-decrement
        severity: warning
        disabled: true
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#indent-error-flow
      - name: indent-error-flow
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#imports-blacklist
      - name: imports-blacklist
        severity: warning
        disabled: false
        arguments:
          - 'crypto/md5'
          - 'crypto/sha1'
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#import-shadowing
      - name: import-shadowing
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#line-length-limit
      - name: line-length-limit
        severity: warning
        disabled: false
        arguments: [120]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#max-public-structs
      - name: max-public-structs
        severity: warning
        disabled: false
        arguments: [3]
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#modifies-parameter
      - name: modifies-parameter
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#modifies-value-receiver
      - name: modifies-value-receiver
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#nested-structs
      - name: nested-structs
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#optimize-operands-order
      - name: optimize-operands-order
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#package-comments
      - name: package-comments
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range
      - name: range
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range-val-in-closure
      - name: range-val-in-closure
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range-val-address
      - name: range-val-address
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#receiver-naming
      - name: receiver-naming
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#redefines-builtin-id
      - name: redefines-builtin-id
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#string-of-int
      - name: string-of-int
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#string-format
      - name: string-format
        severity: warning
        disabled: false
        arguments:
          - - 'core.WriteError[1].Message'
            - '/^([^A-Z]|$)/'
            - must not start with a capital letter
          - - 'fmt.Errorf[0]'
            - '/(^|[^\.!?])$/'
            - must not end in punctuation
          - - panic
            - '/^[^\n]*$/'
            - must not contain line breaks
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#struct-tag
      - name: struct-tag
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#superfluous-else
      - name: superfluous-else
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#time-equal
      - name: time-equal
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#time-naming
      - name: time-naming
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#var-naming
      - name: var-naming
        severity: warning
        disabled: false
        arguments:
          - ['ID'] # AllowList
          - ['VM'] # DenyList
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#var-declaration
      - name: var-declaration
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unconditional-recursion
      - name: unconditional-recursion
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-naming
      - name: unexported-naming
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-return
      - name: unexported-return
        severity: warning
        disabled: true
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unhandled-error
      - name: unhandled-error
        severity: warning
        disabled: false
        arguments:
          - 'fmt.Printf'
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unnecessary-stmt
      - name: unnecessary-stmt
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unreachable-code
      - name: unreachable-code
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-parameter
      - name: unused-parameter
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-receiver
      - name: unused-receiver
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#useless-break
      - name: useless-break
        severity: warning
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#waitgroup-by-value
      - name: waitgroup-by-value
        severity: warning
        disabled: false
  usestdlibvars:
    # Suggest the use of http.MethodXX.
    # Default: true
    http-method: true
    # Suggest the use of http.StatusXX.
    # Default: true
    http-status-code: true
    # Suggest the use of time.Weekday.String().
    # Default: true
    time-weekday: true
    # Suggest the use of time.Month.String().
    # Default: false
    time-month: true
    # Suggest the use of time.Layout.
    # Default: false
    time-layout: true
    # Suggest the use of crypto.Hash.String().
    # Default: false
    crypto-hash: true
    # Suggest the use of rpc.DefaultXXPath.
    # Default: false
    default-rpc-path: true
    # Suggest the use of sql.LevelXX.String().
    # Default: false
    sql-isolation-level: true
    # Suggest the use of tls.SignatureScheme.String().
    # Default: false
    tls-signature-scheme: true
    # Suggest the use of constant.Kind.String().
    # Default: false
    constant-kind: true
  # custom:
  # nilaway:
  # path: go/bin/nilaway
  # description: better nil checks
  # original-url: https://github.com/uber-go/nilaway
  # settings:
  # A comma-separated list of package prefixes to include for analysis.
  # Default "" (all packages are included)
  # include-pkgs: ''
  # A comma-separated list of package prefixes to exclude for analysis. This takes precedence over include-pkgs.
  # Default "" (no packages are excluded)
  # exclude-pkgs: ''
  # A comma-separated list of strings to search for in a file's docstrings to exclude a file from analysis.
  # Default "" (no files are excluded)
  # exclude-file-docstrings: ''
  # A boolean flag indicating if the NilAway errors should be printed in JSON format for further post-processing.
  # Default false
  # json: true
  # A boolean flag indicating if NilAway should pretty print the errors (with ANSI color codes to highlight different components in the errors).
  # Default false
  # pretty-print: false

issues:
  # List of regexps of issue texts to exclude.
  #
  # But independently of this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`.
  # To list all excluded by default patterns execute `golangci-lint run --help`
  #
  # Default: https://golangci-lint.run/usage/false-positives/#default-exclusions
  # exclude:
  #   - abcdef
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: (.+)_test.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - exhaustruct
    - path: (.+)_test.go
      text: 'import-alias-naming'
    - path: (.+)_test.go
      text: 'dot-imports'
  # Exclude known linters from partially hard-vendored code,
  # which is impossible to exclude via `nolint` comments.
  # `/` will be replaced by current OS file path separator to properly work on Windows.
  # - path: internal/hmac/
  #   text: "weak cryptographic primitive"
  #   linters:
  #     - gosec
  # Exclude some `staticcheck` messages.
  # - linters:
  #     - staticcheck
  #   text: "SA9003:"
  # Exclude `lll` issues for long lines with `go:generate`.
  # - linters:
  #     - lll
  #   source: "^//go:generate "
  # Independently of option `exclude` we use default exclude patterns,
  # it can be disabled by this option.
  # To list all excluded by default patterns execute `golangci-lint run --help`.
  # Default: true.
  # exclude-use-default: false
  # If set to true exclude and exclude-rules regular expressions become case-sensitive.
  # Default: false
  # exclude-case-sensitive: false
  # The list of ids of default excludes to include or disable.
  # https://golangci-lint.run/usage/false-positives/#default-exclusions
  # Default: []
  # include:
  #   - EXC0001
  #   - EXC0002
  #   - EXC0003
  #   - EXC0004
  #   - EXC0005
  #   - EXC0006
  #   - EXC0007
  #   - EXC0008
  #   - EXC0009
  #   - EXC0010
  #   - EXC0011
  #   - EXC0012
  #   - EXC0013
  #   - EXC0014
  #   - EXC0015
  # Maximum issues count per one linter.
  # Set to 0 to disable.
  # Default: 50
  # max-issues-per-linter: 0
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  # max-same-issues: 0
  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, else only changes in HEAD~ are analyzed.
  # It's a super-useful option for integration of golangci-lint into existing large codebase.
  # It's not practical to fix all existing issues at the moment of integration:
  # much better don't allow issues in new code.
  #
  # Default: false.
  # new: true
  # Show only new issues created after git revision `REV`.
  # new-from-rev: HEAD
  # Show only new issues created in git patch with set file path.
  # new-from-patch: path/to/patch/file
  # Fix found issues (if it's supported by the linter).
  # fix: true

severity:
  # Set the default severity for issues.
  #
  # If severity rules are defined and the issues do not match or no severity is provided to the rule
  # this will be the default severity applied.
  # Severities should match the supported severity names of the selected out format.
  # - Code climate: https://docs.codeclimate.com/docs/issues#issue-severity
  # - Checkstyle: https://checkstyle.sourceforge.io/property_types.html#SeverityLevel
  # - GitHub: https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-error-message
  #
  # Default value is an empty string.
  default-severity: warning
  # If set to true `severity-rules` regular expressions become case-sensitive.
  # Default: false
  # case-sensitive: true
  # When a list of severity rules are provided, severity information will be added to lint issues.
  # Severity rules have the same filtering capability as exclude rules
  # except you are allowed to specify one matcher per severity rule.
  # Only affects out formats that support setting severity information.
  #
  # Default: []
  rules:
    - linters:
        - gocritic
      severity: warning
